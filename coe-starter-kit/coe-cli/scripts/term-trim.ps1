<#
        .SYNOPSIS
        Trim cast files generated by termtosvg

        .DESCRIPTION
        Remove long pauses in recorded cast file that are longer that the trim time
#>
Param
(
    [Parameter(Mandatory)]
    [Alias("Input")] 
    [string]$inputFile,

    [Parameter(Mandatory)]
    [Alias("Output")] 
    [string]$outputFile,

    [Alias("Trim")] 
    [int]$trimTime = 1
)

# Read in all lines of test
$lines = Get-Content $inputFile
$lastLineValue = 0
for ($i = 0; $i -lt $lines.Length; $i++ ) {
    $line = $lines[$i]
    # Skip the configuration line
    if ($line.StartsWith("{")) {
        Add-Content $outputFile $line
        continue
    }

    # Only process time code lines which should be in format [0.1,"o","Some text"]
    if ($line.StartsWith("[")) {
        #Check if have next line
        if (($i + 1) -lt $lines.Length -and $lines[$i + 1].StartsWith("[")) {
            $firstComma = $line.IndexOf(",")

            $currentNumber = $line.Substring(1, $firstComma - 1)
            Write-Host $currentNumber
            $current = [double]::parse($currentNumber)

            # Get the timecode for the next line
            $nextLineComma = $lines[$i + 1].IndexOf(",")
            $next = [double]::parse($lines[$i + 1].Substring(1, $nextLineComma - 1))

            # Work out the differnce
            $diff = $next - $current
            if ( $diff -gt $trimTime) {
                # Trim the difference to the defined value
                $trimDiff = $trimTime
            }
            else {
                # Use the actual difference
                $trimDiff = $diff
            }
        }
        else {
            $firstComma = $line.IndexOf(",")
            $currentNumber = $line.Substring(1, $firstComma - 1)
            $current = [double]::parse($currentNumber)

            # Get the last line
            $lastLineComma = $lines[$i - 1].IndexOf(",")
            $last = [double]::parse($lines[$i - 1].Substring(1, $lastLineComma - 1))

            $diff = $current - $last
            if ( $diff -gt $trimTime) {
                $trimDiff = $trimTime
            }
            else {
                $trimDiff = $diff
            }
        }

        # Work out the current trimmed time
        $lastLineValue = $lastLineValue + $trimDiff

        # Write out the new trimmed time and th e rest of the original line
        $line = "[" + $lastLineValue.ToString("0.000") + $line.Substring($firstComma, $line.length - $firstComma)
        Add-Content $outputFile $line
    }
}